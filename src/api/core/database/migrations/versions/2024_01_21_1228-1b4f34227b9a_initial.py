"""Initial

Revision ID: 1b4f34227b9a
Revises:
Create Date: 2024-01-21 12:28:21.763864

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "1b4f34227b9a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "comics",
        sa.Column("number", sa.SmallInteger(), nullable=True),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("publication_date", sa.Date(), nullable=False),
        sa.Column("xkcd_url", sa.String(), nullable=True),
        sa.Column("explain_url", sa.String(), nullable=True),
        sa.Column("link_on_click", sa.String(), nullable=True),
        sa.Column("is_interactive", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_comics")),
    )
    op.create_index(
        "uq_number_if_not_extra",
        "comics",
        ["number"],
        unique=True,
        postgresql_where=sa.text("number IS NOT NULL"),
    )
    op.create_index(
        "uq_title_if_extra",
        "comics",
        ["slug"],
        unique=True,
        postgresql_where=sa.text("number IS NULL"),
    )
    op.create_table(
        "tags",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tags")),
        sa.UniqueConstraint("name", name=op.f("uq_tags_name")),
    )
    op.create_table(
        "comic_tag_association",
        sa.Column("comic_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["comic_id"],
            ["comics.id"],
            name=op.f("fk_comic_tag_association_comic_id_comics"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
            name=op.f("fk_comic_tag_association_tag_id_tags"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("comic_id", "tag_id", name=op.f("pk_comic_tag_association")),
    )
    op.create_table(
        "translations",
        sa.Column("comic_id", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("language", sa.String(length=2), nullable=False),
        sa.Column("tooltip", sa.String(), nullable=True),
        sa.Column("transcript", sa.String(), nullable=True),
        sa.Column("is_draft", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["comic_id"],
            ["comics.id"],
            name=op.f("fk_translations_comic_id_comics"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_translations")),
    )
    op.create_index(
        "uq_translation_if_not_draft",
        "translations",
        ["language", "comic_id"],
        unique=True,
        postgresql_where=sa.text("NOT is_draft"),
    )
    op.create_table(
        "translation_images",
        sa.Column("translation_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.String(length=10), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("converted_path", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["translation_id"],
            ["translations.id"],
            name=op.f("fk_translation_images_translation_id_translations"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_translation_images")),
    )
    op.create_index(
        "uq_version_per_translation",
        "translation_images",
        ["version", "translation_id"],
        unique=True,
        postgresql_where=sa.text("translation_id IS NOT NULL"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "uq_version_per_translation",
        table_name="translation_images",
        postgresql_where=sa.text("translation_id IS NOT NULL"),
    )
    op.drop_table("translation_images")
    op.drop_index(
        "uq_translation_if_not_draft",
        table_name="translations",
        postgresql_where=sa.text("NOT is_draft"),
    )
    op.drop_table("translations")
    op.drop_table("comic_tag_association")
    op.drop_table("tags")
    op.drop_index(
        "uq_title_if_extra", table_name="comics", postgresql_where=sa.text("number IS NULL"),
    )
    op.drop_index(
        "uq_number_if_not_extra",
        table_name="comics",
        postgresql_where=sa.text("number IS NOT NULL"),
    )
    op.drop_table("comics")
    # ### end Alembic commands ###
