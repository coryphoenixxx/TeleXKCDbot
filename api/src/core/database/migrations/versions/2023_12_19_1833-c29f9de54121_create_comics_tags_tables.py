"""create_comics_tags_tables

Revision ID: c29f9de54121
Revises:
Create Date: 2023-12-19 18:33:38.918724

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "c29f9de54121"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "comics",
        sa.Column("issue_number", sa.SmallInteger(), autoincrement=False, nullable=False),
        sa.Column("publication_date", sa.Date(), nullable=False),
        sa.Column("xkcd_url", sa.String(), nullable=True),
        sa.Column("reddit_url", sa.String(), nullable=True),
        sa.Column("explain_url", sa.String(), nullable=True),
        sa.Column("link_on_click", sa.String(), nullable=True),
        sa.Column("is_interactive", sa.Boolean(), nullable=False),
        sa.Column("is_extra", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("issue_number", name=op.f("pk_comics")),
    )
    op.create_table(
        "tags",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tags")),
        sa.UniqueConstraint("name", name=op.f("uq_tags_name")),
    )
    op.create_table(
        "comic_tag_association",
        sa.Column("comic_id", sa.SmallInteger(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["comic_id"],
            ["comics.issue_number"],
            name=op.f("fk_comic_tag_association_comic_id_comics"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
            name=op.f("fk_comic_tag_association_tag_id_tags"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("comic_id", "tag_id", "id", name=op.f("pk_comic_tag_association")),
        sa.UniqueConstraint("comic_id", "tag_id", name=op.f("uq_comic_tag_association_comic_id")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("comic_tag_association")
    op.drop_table("tags")
    op.drop_table("comics")
    # ### end Alembic commands ###
