services:

  bot:
    container_name: telexkcdbot-bot
    build: bot
    ports:
      - ${BOT_PORT}:${BOT_PORT}
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
    env_file:
      - bot/.env
    restart: unless-stopped
    profiles:
      - core
      - bot
      - base

  api:
    container_name: telexkcdbot-api
    build: api
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
    env_file:
      - api/.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - ${API_PORT}:${API_PORT}
    healthcheck:
      test: curl -f http://api:{API_PORT} || exit 1
      interval: 1s
      timeout: 1s
      start_period: 10s
      retries: 10
    restart: unless-stopped
    profiles:
      - core
      - api
      - base

  db:
    container_name: telexkcdbot-postgres
    image: onjin/alpine-postgres:13.0
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - .:/var/lib/postgresql/data
      - ./postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    ports:
      - ${DB_PORT}:${DB_PORT}
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 1s
      timeout: 1s
      start_period: 10s
      retries: 10
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1GB
    profiles:
      - core
      - api
      - db
